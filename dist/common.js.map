{"version":3,"file":"common.js","sources":["webpack:///._src_components_vant-weapp_dist_calendar_utils.js","webpack:///._src_components_vant-weapp_dist_common_component.js","webpack:///._src_components_vant-weapp_dist_common_utils.js","webpack:///._src_components_vant-weapp_dist_mixins_basic.js","webpack:///._src_components_vant-weapp_dist_mixins_transition.js"],"sourcesContent":["export const ROW_HEIGHT = 64;\nexport function formatMonthTitle(date) {\n  if (!(date instanceof Date)) {\n    date = new Date(date);\n  }\n  return `${date.getFullYear()}年${date.getMonth() + 1}月`;\n}\nexport function compareMonth(date1, date2) {\n  if (!(date1 instanceof Date)) {\n    date1 = new Date(date1);\n  }\n  if (!(date2 instanceof Date)) {\n    date2 = new Date(date2);\n  }\n  const year1 = date1.getFullYear();\n  const year2 = date2.getFullYear();\n  const month1 = date1.getMonth();\n  const month2 = date2.getMonth();\n  if (year1 === year2) {\n    return month1 === month2 ? 0 : month1 > month2 ? 1 : -1;\n  }\n  return year1 > year2 ? 1 : -1;\n}\nexport function compareDay(day1, day2) {\n  if (!(day1 instanceof Date)) {\n    day1 = new Date(day1);\n  }\n  if (!(day2 instanceof Date)) {\n    day2 = new Date(day2);\n  }\n  const compareMonthResult = compareMonth(day1, day2);\n  if (compareMonthResult === 0) {\n    const date1 = day1.getDate();\n    const date2 = day2.getDate();\n    return date1 === date2 ? 0 : date1 > date2 ? 1 : -1;\n  }\n  return compareMonthResult;\n}\nexport function getDayByOffset(date, offset) {\n  date = new Date(date);\n  date.setDate(date.getDate() + offset);\n  return date;\n}\nexport function getPrevDay(date) {\n  return getDayByOffset(date, -1);\n}\nexport function getNextDay(date) {\n  return getDayByOffset(date, 1);\n}\nexport function calcDateNum(date) {\n  const day1 = new Date(date[0]).getTime();\n  const day2 = new Date(date[1]).getTime();\n  return (day2 - day1) / (1000 * 60 * 60 * 24) + 1;\n}\nexport function copyDates(dates) {\n  if (Array.isArray(dates)) {\n    return dates.map((date) => {\n      if (date === null) {\n        return date;\n      }\n      return new Date(date);\n    });\n  }\n  return new Date(dates);\n}\nexport function getMonthEndDay(year, month) {\n  return 32 - new Date(year, month - 1, 32).getDate();\n}\nexport function getMonths(minDate, maxDate) {\n  const months = [];\n  const cursor = new Date(minDate);\n  cursor.setDate(1);\n  do {\n    months.push(cursor.getTime());\n    cursor.setMonth(cursor.getMonth() + 1);\n  } while (compareMonth(cursor, maxDate) !== 1);\n  return months;\n}\n","import { basic } from '../mixins/basic';\nconst relationFunctions = {\n  ancestor: {\n    linked(parent) {\n      this.parent = parent;\n    },\n    unlinked() {\n      this.parent = null;\n    },\n  },\n  descendant: {\n    linked(child) {\n      this.children = this.children || [];\n      this.children.push(child);\n    },\n    unlinked(child) {\n      this.children = (this.children || []).filter((it) => it !== child);\n    },\n  },\n};\nfunction mapKeys(source, target, map) {\n  Object.keys(map).forEach((key) => {\n    if (source[key]) {\n      target[map[key]] = source[key];\n    }\n  });\n}\nfunction makeRelation(options, vantOptions, relation) {\n  const { type, name, linked, unlinked, linkChanged } = relation;\n  const { beforeCreate, destroyed } = vantOptions;\n  if (type === 'descendant') {\n    options.created = function () {\n      beforeCreate && beforeCreate.bind(this)();\n      this.children = this.children || [];\n    };\n    options.detached = function () {\n      this.children = [];\n      destroyed && destroyed.bind(this)();\n    };\n  }\n  options.relations = Object.assign(options.relations || {}, {\n    [`../${name}/index`]: {\n      type,\n      linked(node) {\n        relationFunctions[type].linked.bind(this)(node);\n        linked && linked.bind(this)(node);\n      },\n      linkChanged(node) {\n        linkChanged && linkChanged.bind(this)(node);\n      },\n      unlinked(node) {\n        relationFunctions[type].unlinked.bind(this)(node);\n        unlinked && unlinked.bind(this)(node);\n      },\n    },\n  });\n}\nfunction VantComponent(vantOptions = {}) {\n  const options = {};\n  mapKeys(vantOptions, options, {\n    data: 'data',\n    props: 'properties',\n    mixins: 'behaviors',\n    methods: 'methods',\n    beforeCreate: 'created',\n    created: 'attached',\n    mounted: 'ready',\n    relations: 'relations',\n    destroyed: 'detached',\n    classes: 'externalClasses',\n  });\n  const { relation } = vantOptions;\n  if (relation) {\n    makeRelation(options, vantOptions, relation);\n  }\n  // add default externalClasses\n  options.externalClasses = options.externalClasses || [];\n  options.externalClasses.push('custom-class');\n  // add default behaviors\n  options.behaviors = options.behaviors || [];\n  options.behaviors.push(basic);\n  // map field to form-field behavior\n  if (vantOptions.field) {\n    options.behaviors.push('wx://form-field');\n  }\n  if (options.properties) {\n    Object.keys(options.properties).forEach((name) => {\n      if (Array.isArray(options.properties[name])) {\n        // miniprogram do not allow multi type\n        options.properties[name] = null;\n      }\n    });\n  }\n  // add default options\n  options.options = {\n    multipleSlots: true,\n    addGlobalClass: true,\n  };\n  Component(options);\n}\nexport { VantComponent };\n","export function isDef(value) {\n    return value !== undefined && value !== null;\n}\nexport function isObj(x) {\n    const type = typeof x;\n    return x !== null && (type === 'object' || type === 'function');\n}\nexport function isNumber(value) {\n    return /^\\d+(\\.\\d+)?$/.test(value);\n}\nexport function range(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function nextTick(fn) {\n    setTimeout(() => {\n        fn();\n    }, 1000 / 30);\n}\nlet systemInfo = null;\nexport function getSystemInfoSync() {\n    if (systemInfo == null) {\n        systemInfo = wx.getSystemInfoSync();\n    }\n    return systemInfo;\n}\nexport function addUnit(value) {\n    if (!isDef(value)) {\n        return undefined;\n    }\n    value = String(value);\n    return isNumber(value) ? `${value}px` : value;\n}\n","export const basic = Behavior({\n  methods: {\n    $emit(...args) {\n      this.triggerEvent(...args);\n    },\n    set(data, callback) {\n      this.setData(data, callback);\n      return new Promise((resolve) => wx.nextTick(resolve));\n    },\n    getRect(selector, all) {\n      return new Promise((resolve) => {\n        wx.createSelectorQuery()\n          .in(this)\n          [all ? 'selectAll' : 'select'](selector)\n          .boundingClientRect((rect) => {\n            if (all && Array.isArray(rect) && rect.length) {\n              resolve(rect);\n            }\n            if (!all && rect) {\n              resolve(rect);\n            }\n          })\n          .exec();\n      });\n    },\n  },\n});\n","import { isObj } from '../common/utils';\nconst getClassNames = (name) => ({\n  enter: `van-${name}-enter van-${name}-enter-active enter-class enter-active-class`,\n  'enter-to': `van-${name}-enter-to van-${name}-enter-active enter-to-class enter-active-class`,\n  leave: `van-${name}-leave van-${name}-leave-active leave-class leave-active-class`,\n  'leave-to': `van-${name}-leave-to van-${name}-leave-active leave-to-class leave-active-class`,\n});\nconst nextTick = () => new Promise((resolve) => setTimeout(resolve, 1000 / 30));\nexport const transition = function (showDefaultValue) {\n  return Behavior({\n    properties: {\n      customStyle: String,\n      // @ts-ignore\n      show: {\n        type: Boolean,\n        value: showDefaultValue,\n        observer: 'observeShow',\n      },\n      // @ts-ignore\n      duration: {\n        type: null,\n        value: 300,\n        observer: 'observeDuration',\n      },\n      name: {\n        type: String,\n        value: 'fade',\n      },\n    },\n    data: {\n      type: '',\n      inited: false,\n      display: false,\n    },\n    methods: {\n      observeShow(value, old) {\n        if (value === old) {\n          return;\n        }\n        value ? this.enter() : this.leave();\n      },\n      enter() {\n        const { duration, name } = this.data;\n        const classNames = getClassNames(name);\n        const currentDuration = isObj(duration) ? duration.enter : duration;\n        this.status = 'enter';\n        this.$emit('before-enter');\n        Promise.resolve()\n          .then(nextTick)\n          .then(() => {\n            this.checkStatus('enter');\n            this.$emit('enter');\n            this.setData({\n              inited: true,\n              display: true,\n              classes: classNames.enter,\n              currentDuration,\n            });\n          })\n          .then(nextTick)\n          .then(() => {\n            this.checkStatus('enter');\n            this.transitionEnded = false;\n            this.setData({\n              classes: classNames['enter-to'],\n            });\n          })\n          .catch(() => {});\n      },\n      leave() {\n        if (!this.data.display) {\n          return;\n        }\n        const { duration, name } = this.data;\n        const classNames = getClassNames(name);\n        const currentDuration = isObj(duration) ? duration.leave : duration;\n        this.status = 'leave';\n        this.$emit('before-leave');\n        Promise.resolve()\n          .then(nextTick)\n          .then(() => {\n            this.checkStatus('leave');\n            this.$emit('leave');\n            this.setData({\n              classes: classNames.leave,\n              currentDuration,\n            });\n          })\n          .then(nextTick)\n          .then(() => {\n            this.checkStatus('leave');\n            this.transitionEnded = false;\n            setTimeout(() => this.onTransitionEnd(), currentDuration);\n            this.setData({\n              classes: classNames['leave-to'],\n            });\n          })\n          .catch(() => {});\n      },\n      checkStatus(status) {\n        if (status !== this.status) {\n          throw new Error(`incongruent status: ${status}`);\n        }\n      },\n      onTransitionEnd() {\n        if (this.transitionEnded) {\n          return;\n        }\n        this.transitionEnded = true;\n        this.$emit(`after-${this.status}`);\n        const { show, display } = this.data;\n        if (!show && display) {\n          this.setData({ display: false });\n        }\n      },\n    },\n  });\n};\n"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAPA;AATA;AACA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;AC/BA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAvBA;AADA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAdA;AAmBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAhFA;AAzBA;AA4GA;;;;A","sourceRoot":""}