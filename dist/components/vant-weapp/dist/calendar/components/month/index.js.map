{"version":3,"file":"components/vant-weapp/dist/calendar/components/month/index.js","sources":["webpack:///._src_components_vant-weapp_dist_calendar_components_month_index.js"],"sourcesContent":["import { VantComponent } from '../../../common/component';\nimport {\n  getMonthEndDay,\n  compareDay,\n  getPrevDay,\n  getNextDay,\n} from '../../utils';\nVantComponent({\n  props: {\n    date: {\n      type: null,\n      observer: 'setDays',\n    },\n    type: {\n      type: String,\n      observer: 'setDays',\n    },\n    color: String,\n    minDate: {\n      type: null,\n      observer: 'setDays',\n    },\n    maxDate: {\n      type: null,\n      observer: 'setDays',\n    },\n    showMark: Boolean,\n    rowHeight: [Number, String],\n    formatter: {\n      type: null,\n      observer: 'setDays',\n    },\n    currentDate: {\n      type: [null, Array],\n      observer: 'setDays',\n    },\n    allowSameDay: Boolean,\n    showSubtitle: Boolean,\n    showMonthTitle: Boolean,\n  },\n  data: {\n    visible: true,\n    days: [],\n  },\n  methods: {\n    onClick(event) {\n      const { index } = event.currentTarget.dataset;\n      const item = this.data.days[index];\n      if (item.type !== 'disabled') {\n        this.$emit('click', item);\n      }\n    },\n    setDays() {\n      const days = [];\n      const startDate = new Date(this.data.date);\n      const year = startDate.getFullYear();\n      const month = startDate.getMonth();\n      const totalDay = getMonthEndDay(\n        startDate.getFullYear(),\n        startDate.getMonth() + 1\n      );\n      for (let day = 1; day <= totalDay; day++) {\n        const date = new Date(year, month, day);\n        const type = this.getDayType(date);\n        let config = {\n          date,\n          type,\n          text: day,\n          bottomInfo: this.getBottomInfo(type),\n        };\n        if (this.data.formatter) {\n          config = this.data.formatter(config);\n        }\n        days.push(config);\n      }\n      this.setData({ days });\n    },\n    getMultipleDayType(day) {\n      const { currentDate } = this.data;\n      if (!Array.isArray(currentDate)) {\n        return '';\n      }\n      const isSelected = (date) =>\n        currentDate.some((item) => compareDay(item, date) === 0);\n      if (isSelected(day)) {\n        const prevDay = getPrevDay(day);\n        const nextDay = getNextDay(day);\n        const prevSelected = isSelected(prevDay);\n        const nextSelected = isSelected(nextDay);\n        if (prevSelected && nextSelected) {\n          return 'multiple-middle';\n        }\n        if (prevSelected) {\n          return 'end';\n        }\n        return nextSelected ? 'start' : 'multiple-selected';\n      }\n      return '';\n    },\n    getRangeDayType(day) {\n      const { currentDate, allowSameDay } = this.data;\n      if (!Array.isArray(currentDate)) {\n        return;\n      }\n      const [startDay, endDay] = currentDate;\n      if (!startDay) {\n        return;\n      }\n      const compareToStart = compareDay(day, startDay);\n      if (!endDay) {\n        return compareToStart === 0 ? 'start' : '';\n      }\n      const compareToEnd = compareDay(day, endDay);\n      if (compareToStart === 0 && compareToEnd === 0 && allowSameDay) {\n        return 'start-end';\n      }\n      if (compareToStart === 0) {\n        return 'start';\n      }\n      if (compareToEnd === 0) {\n        return 'end';\n      }\n      if (compareToStart > 0 && compareToEnd < 0) {\n        return 'middle';\n      }\n    },\n    getDayType(day) {\n      const { type, minDate, maxDate, currentDate } = this.data;\n      if (compareDay(day, minDate) < 0 || compareDay(day, maxDate) > 0) {\n        return 'disabled';\n      }\n      if (type === 'single') {\n        return compareDay(day, currentDate) === 0 ? 'selected' : '';\n      }\n      if (type === 'multiple') {\n        return this.getMultipleDayType(day);\n      }\n      /* istanbul ignore else */\n      if (type === 'range') {\n        return this.getRangeDayType(day);\n      }\n    },\n    getBottomInfo(type) {\n      if (this.data.type === 'range') {\n        if (type === 'start') {\n          return '开始';\n        }\n        if (type === 'end') {\n          return '结束';\n        }\n        if (type === 'start-end') {\n          return '开始/结束';\n        }\n      }\n    },\n  },\n});\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AA9BA;AAgCA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AA9GA;AArCA;;;;A","sourceRoot":""}